Twitter
*********************

Plugin pro authentizaci Twitter uživatele pomocí oAuth.

|* Github | https://github.com/MartinSadovy/Netrium-Addons-Twitter
|* Packagist (Composer) | http://packagist.org/packages/sodae/netrium-addons-twitter
|* Autor | Martin Sadový
|* Licence | New BSD License, GPLv2, GPLv3


Při autentizaci si služba sama vytáhne adresu kam má Twitter vrátit uživatele.

Instalace
---------

Zaregistrujete rozšíření do konfigurátoru:
/--php
$configurator->onCompile[] = function(Nette\Config\Configurator $configurator, Nette\Config\Compiler $compiler) {
	$compiler->addExtension('twitter', new Netrium\Addons\Twitter\TwitterExtension);
};
\--

v config.neon si nastavíte
/--neon
	twitter:
		consumerKey: # váš consumer klíč od twitter aplikace
		consumerSecretKey: # váš consumer "tajemství" od twitter aplikace
\--
v případě, že nepotřebujete používat autentikátor, a chcete mít v API již nastavené přístupové tokeny, existuje nastavení
/--neon
	twitter:
		...

		accessKey: # váš klíč od přístupového tokenu
		accessSecret: # váše tajemtví od přístupového tokenu
\--



Příklad použití jako autentikátor
---------------------------------

Váš autentikátor:
/--php
<?php

use Nette\Security as NS;


/**
 * Users authenticator.
 *
 * @author     John Doe
 * @package    MyApplication
 */
class Authenticator extends Nette\Object implements NS\IAuthenticator
{
	/** @var Netrium\Addons\Twitter\Authenticator */
	protected $authenticator;


	public function __construct(Netrium\Addons\Twitter\Authenticator $authenticator)
	{
		$this->authenticator = $authenticator;
	}


	/**
	 * Performs an authentication
	 * @param  array
	 * @return Nette\Security\Identity
	 * @throws Nette\Security\AuthenticationException
	 */
	public function authenticate(array $c)
	{
		try {
			$data = $this->authenticator->tryAuthenticate();
		} catch (Netrium\Addons\Twitter\AuthenticationException $e) {
			throw new NS\AuthenticationException('Twitter authentication did not approve', self::NOT_APPROVED, $e);
		}

		return new NS\Identity($data['user']->id, NULL, $data);
	}

}

\--

v config.neon:
/--neon
	services:
		authenticator: Authenticator(@twitter.authenticator)
\--

presenter nebo v logické části:
/--php
if ($this->user->isLoggedIn()) {
	$api = $this->context->twitter->createApi();
	$accessToken = $this->user->getIdentity()->accessToken;
	$api->setOAuthToken($accessToken['key'], $accessToken['secret']);

	if ($api->verifyCredentials()) {
		$this->template->timeline = $api->get('statuses/home_timeline');
	} else {
		$this->redirect('Sign:out');
	}
}
\--

{{author: sodae|1876}}
