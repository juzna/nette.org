Pdfresponse pro Nette 2
************

Tento plugin nedělá vůbec nic.

|* Version | 2.0
|* Forum thread | http://addons.nette.org/cs/pdfresponse
|* Author | Honza Kuchař
|* ^| Miroslav Paulík
|* ^| Tomáš Votruba
|* Homepage | https://github.com/castamir/PdfResponse

Basic info
===

- direct descendant of http://addons.nette.org/cs/pdfresponse
- creates PDF from html or templates
- mPDF (v5.6 or newer) required - see install
- works with Nette 2.0.10
- no js support
- nice api

Install
---
Recommended installation is via Composer.

/--neon
    {
        "require":{
            "castamir/pdf-response": ">= 2.0"
        }
    }
\--

Alternative install without Composer:

/--neon
	libs/mPDF/ (download and place mPDF library here)
	libs/netterobots.txt (prevents robotloader from caching all mPDF classes)
	libs/PdfResponse.php
\--

and add the following line to the beggining of libs/PdfResponse.php:

/--php
    require __DIR__ . "/mPDF/mpdf.php";
\--

How to prepare PDF from template
---
/--php
	use PdfResponse;

	class MyPresenter extends Nette\Application\UI\Presenter {

        public function actionPdf()
        {
            $template = $this->createTemplate()->setFile(APP_DIR . "/templates/myPdf.latte");
            $template->someValue = 123;
            // Tip: In template to make a new page use <pagebreak>

            $pdf = new \PdfResponse($template);

            // optional
            $pdf->documentTitle = date("Y-m-d") . " My super title"; // creates filename 2012-06-30-my-super-title.pdf
            $pdf->pageFormat = "A4-L"; // wide format
            $pdf->getMPDF()->setFooter("|© www.mysite.com|"); // footer
        }
    }
\--

Save file to server
---
/--php
    public function actionPdf()
        {
            $template = $this->createTemplate()->setFile(APP_DIR . "/templates/myPdf.latte");

            $pdf = new \PdfResponse($template);

            $pdf->save(WWW_DIR . "/generated/"); // as a filename $this->documentTitle will be used
            $pdf->save(WWW_DIR . "/generated/", "another file 123); // OR use a custom name
        }

\--


Attach file to an email
---
/--php
    public function actionPdf()
        {
            $template = $this->createTemplate()->setFile(APP_DIR . "/templates/myPdf.latte");

            $pdf = new \PdfResponse($template);

            $savedFile = $pdf->save(WWW_DIR . "/contracts/");
            $mail = new Nette\Mail\Message;
            $mail->addTo("john@doe.com");
            $mail->addAttachment($savedFile);
            $mail->send();
        }
    }
\--



Force file to download
---
/--php
    public function actionPdf()
        {
            $template = $this->createTemplate()->setFile(APP_DIR . "/templates/myPdf.latte");

            $pdf = new \PdfResponse($template);

            $pdf->setSaveMode(PdfResponse::DOWNLOAD); //default behavior

            $this->sendResponse($pdf);
        }
    }
\--



Force file to display in a browser
---
/--php
    public function actionPdf()
        {
            $template = $this->createTemplate()->setFile(APP_DIR . "/templates/myPdf.latte");

            $pdf = new \PdfResponse($template);

            $pdf->setSaveMode(PdfResponse::INLINE);

            $this->sendResponse($pdf);
        }
    }
\--



Set a pdf background easily
---
/--php
    public function actionPdf()
        {
            $template = $this->createTemplate()->setFile(APP_DIR . "/templates/myPdf.latte");

            $pdf = new \PdfResponse($template);

            $pdf->setBackgroundTemplate(APP_DIR . "/templates/PDF_template.pdf");

            $this->sendResponse($pdf);
        }
    }
\--

{{author: castamir|4073}}
