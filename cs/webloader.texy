[* webloader-logo.png .(WebLoader) *]
**********

Komponenta načítající skripty a styly s podporou spojování souborů, widgetovým voláním, externí minimalizací obsahu souborů, na straně serveru nastavenými proměnnými v CSS a JavaScriptu, … .[perex]



| Verze | 0.1
| Download | [webloader.zip | attachment:webloader.zip]
| Autor | Jan Marek
| Licence | MIT

Instalace
=========

Zkopírujte obsah složky `WebLoader` do své aplikace.

Příklad použití
===============

CSS
---

Továrnička komponenty v presenteru:

/--code php
protected function createComponentCss() {
        $css = new CssLoader;

        // cesta na disku ke zdroji
        $css->sourcePath = WWW_DIR . "/css";

        // cesta na webu ke zdroji (kvůli absolutizaci cest v css souboru)
        $css->sourceUri = Environment::getVariable("baseUri") . "css";

        // cesta na webu k cílovému adresáři
        $css->tempUri = Environment::getVariable("baseUri") . "webtemp";

        // cesta na disku k cílovému adresáři
        $css->tempPath = WWW_DIR . "/webtemp";

        return $css;
}
\--

Použití v šabloně:
/--code html
{control css 'base.css', 'layout.css', 'subfolder/text.css'}
\--

JavaScript
----------

Továrnička komponenty v presenteru:

/--code php
protected function createComponentJs() {
        $js = new JavaScriptLoader;

        $js->tempUri = Environment::getVariable("baseUri") . "webtemp";
        $js->tempPath = WWW_DIR . "/webtemp";
        $js->sourcePath = WWW_DIR . "/js";

        return $js;
}
\--

Použití v šabloně:
/--code html
{control js 'jquery.js', 'lightbox.js', 'web.js'}
\--

Minimalizovaný JavaScript pomocí filtrů a třídy [JavaScriptPacker | http://dean.edwards.name/download/#packer]
------------------------------------

Továrnička komponenty v presenteru:

/--code php
protected function createComponentPackedJs() {
	// předpokládá existenci továrničky výše
        $js = $this->createComponentJs();

	// přidá filtr, což je jakýkoliv callback
        $js->filters[] = array($this, "packJs");

        return $js;
}

public function packJs($code) {
        $packer = new JavaScriptPacker($code, "None");
        return $packer->pack();
}
\--

Použití v šabloně:
/--code html
{control packedJs 'jquery.js', 'lightbox.js', 'web.js'}
\--

CSS s proměnnými pomocí filtru VariablesFilter
----------------

Továrnička komponenty v presenteru:

/--code php
protected function createComponentCssWithVariables() {
        // proměnné filtru je možné nastavit buď přímo v konstruktoru
        $filter = new VariablesFilter(array(
                "cervena" => "red",
                "zelena" => "green",
        ));

        // nebo pomocí setteru
        $filter->setVariable("modra", "blue");

        // podobu proměnné v css souboru lze nastavit také
        // $filter->setDelimiter("{", "}");
        // výchozí hodnoty jsou {{$ a }}

        // nastavení filtru
        $css->filter[] = array($filter, "apply");

        return $css;
}
\--

CSS soubor:

/--code css
body {background: {{$cervena}}}
h1 {color: {{$modra}}}
p {color: {{$zelena}}}
\--

Výstup:
/--code css
body {background: red}
h1 {color: blue}
p {color: green}
\--

Použití v šabloně:
/--code html
{control cssWithVariables 'colors.css'}
\--

V JavaScriptu lze proměnné výhodně použít pro nastavování URL adres na různé presentery či signály.

Historie
========


{{extras}}



{{attachment: webloader.zip}}

{{author: Honza Marek|516}}
