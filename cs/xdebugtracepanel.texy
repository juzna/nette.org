XDebugTrace panel
*****************

Panel používá xdebug_start_trace() a xdebug_stop_trace() k vygenerování trace logu funkcí, který následně parsuje, filtruje a zobrazí v tabulce. .[perex]

|* Verze     | 0.3-beta7
|* Repozitář | [https://github.com/milo/XDebugTracePanel]
|* Autor     | (c) Miloslav Hůla (milo) 2011, 2013
|* Licence   | "LGPL":http://www.gnu.org/licenses/lgpl.html
|* Požadavky | XDebug 2.1.x, PHP 5.3+, Nette 2.0.x - 2.1-dev
|* Diskuze   | [http://forum.nette.org/cs/9396-xdebugtrace-panel-trasovani-behu-funkci]


Ukázka
======
[* screenshot.png *]:https://github.com/milo/XDebugTracePanel/blob/master/screenshot.png


Instalace
=========
- `XDebugTrace.php`, `XDebugTraceExtension.php` a latte šablony uložte někam, kam má přístup RobotLoader, například `libs/Panels/XDebugTrace/`

- V `bootstrap.php` zaregistrujte rozšíření:
/--php
$configurator->onCompile[] = function($configurator, $compiler) {
	$compiler->addExtension('xtrace', new Panel\XDebugTraceExtension);
};
\--

- případné nastavení proveďte v `config.neon`
/--neon
xtrace:
	traceFile: /path/to/temp/trace_file.xt
	onCreate: InitHelpers::setupXTracePanel
	statistics: TRUE
\--
`onCreate` callback dostává jako parametr XDebugTrace objekt. Lze ho využít pro nastavení filtrace trace záznamů.

`statistics` zapíná zpracování jednoduchých statistik, kolikrát byla funkce volána. Může být též ve formátu `[TRUE, deltaTime]` kde druhý parametr určuje, podle čeho se statistika seřadí.

Další možnosti instalace (manuální; pro Nette 2.1-dev) a konfigurace najdete v "HOWTO":https://github.com/milo/XDebugTracePanel/blob/master/HOWTO.md na GitHubu. .[note]

- tímto je panel zaregistrován, ale trasování zatím neběží



Spuštění trasování
==================
Systémový kontejner nabízí službu `xtrace`. V prezenteru lze
/--php
$this->context->xtrace->start();
...
... kód který chceme sledovat
...
$this->context->xtrace->pause();

// Pokračování trace logu
$this->context->xtrace->start();
...
... kód který chceme sledovat
...
$this->context->xtrace->stop();
\--

... anebo použít statickou variantu
/--php
Panel\XDebugTrace::callStart();
Panel\XDebugTrace::callPause();
Panel\XDebugTrace::callStop();
\--


Filtrování záznamů trace logu
=============================
Informace k filtrování a příklady filtrů najdete v "HOWTO":https://github.com/milo/XDebugTracePanel/blob/master/HOWTOR.md na GitHubu.

{{tags: xdebug; trace; panel}}


{{author: Milo|2970}}
