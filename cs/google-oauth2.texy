Google OAuth2
*************

Plugin pro authentizaci uživatele pomocí Google OAuth2.

|* Github | https://github.com/Mikulas/nette-google-oauth2
|* Packagist (Composer) | http://packagist.org/packages/mikulas/nette-google-oauth2
|* Autor | Mikuláš Dítě
|* Licence | New BSD License



Instalace
---------

config.neon

/--neon
common:
	parameters:
		google:
			id: vase_id
			secret: vase_secret
			scope: ['https://www.googleapis.com/auth/userinfo.profile', 'https://www.googleapis.com/auth/userinfo.email']

	services:
		google: Google([id: %google.id%, secret: %google.secret%])
\--

Příklad použití
---------------

https://gist.github.com/3415331#file_google_auth.php

Authenticator:
/--php
<?php

class GoogleAuth extends Nette\Object implements \Nette\Security\IAuthenticator
{

	/** @var Google */
	protected $google;

	/**
	 * database selector
	 * @var Table\Users
	 */
	protected $users;



	public function __construct(Google $google, Table\Users $users)
	{
		$this->google = $google;
		$this->users = $users;
	}



	public function authenticate(array $data)
	{
		$info = end($data);
		$user = $this->users->findOneBy(['google_id' => $info->id]);

		// If user with this email exists, link the accounts
		if (!$user) {
			$user = $this->users->findOneBy(['email' => $info->email]);
			if ($user) {
				$user->google_id = $info->id;
				$user->update();
			}
		}

		// Otherwise, register new user
		if (!$user) {
			$user = $this->users->insert([
				'name' => $info->name,
				'google_id' => $info->id,
				'mail' => $info->email,
				'role' => '',
			]);
		}

		return new \Nette\Security\Identity($user->id, explode(';', $user->role), []);
	}

}

\--

config.neon:
/--neon
	services:
		authenticator: GoogleAuth
\--

presenter:
/--php

	public function actionGoogleLogin()
	{
		$url = $this->context->google->getLoginUrl([
			'scope' => $this->context->params['google']['scope'],
			'redirect_uri' => $this->link('//googleAuth'),
		]);
		$this->redirectUrl($url);
	}


	public function actionGoogleAuth($code, $error = NULL)
	{
		if ($error) {
			$this->flashMessage('Please allow this application access to your Google account in order to log in.');
			$this->redirect('in');
		}

		$g = $this->context->google;
		$token = $g->getToken($code, $this->link('this'));
		$this->user->googleLogin($g->getInfo($token));
		$this->redirect(':Front:Profile:');
	}
\--

{{author: Mikulas Dite|2514}}
