SuggestInput
*********

Našeptávač pro textové pole.

|*Verze | 2.0
|*Download | http://github.com/peci1/Nette-SuggestInput
|*Demo | http://suggest-input.php5.cz/suggester-test/
|*Git | git://github.com/peci1/Nette-SuggestInput.git
|*Git (webové rozhraní) | http://github.com/peci1/Nette-SuggestInput
|*Forum thread | http://forum.nette.org/cs/2769-suggestinput-aneb-naseptavac
|*Autor | Martin Pecka

Ahoj, z dlouhé chvíle jsem si napsal našeptávač :)

Malá ochutnávka, jak se používá:

SuggesterTestPresenter.php
/--php
    protected function createComponentTestForm()
    {
        $form = new Form();

	//to set the default (Javascript) UI language, call the following (L10N strings are in jquery.suggest.js)
	//Nette\Addons\SuggestInput::$defaultUiLanguage = 'en';

        //see further functions' definitions for suggester factories and
        //action definitions

        //the simplest case - suggesting from an array
        $form->addSuggestInput('suggest1', "Simple ArraySuggester (try eg. 'ahoj')")

            //here is the link to the action that provides suggestions
            ->setSuggestLink($this->link('suggestAhoj'));



        //you can also use this as a simple input with a non-changing tooltip
        //which is displayed while the input is active
        $form->addSuggestInput('suggest2', "Using ConstantSuggester as tooltip")
            ->setSuggestLink($this->link('suggestConstant'))

	    //use this input as constant suggester
	    ->useAsConstantSuggester()

	    //and this way you set some JS options (defined in jquery.suggest.js)
	    ->addJsOptions('lang', 'en');



        //checking if the submitted value is one of the suggested ones
        $form->addSuggestInput('suggest3', "Suggested values check on form send (try eg. 'ahoj')")
            ->setSuggestLink($this->link('suggestAhoj'))

            //here is the suggester that is used, only required if you want to use the following validator
            ->setSuggester($this['ahojSuggester'])

            //this validation rule checks if the entered value is one of the suggested items
            //the FALSE at the end means we do not allow empty value as a value
            ->addRule(SuggestInput::SUGGESTED_ONLY, 'Select a value from the suggested list', FALSE);



        //DB suggester - suggest from a database table
        $form->addSuggestInput('suggest4', "DbSuggester (try eg. 'Milan', 'pet')")
            ->setSuggestLink($this->link('suggestDb'));



        $form->addSuggestInput('suggest5', 'Retrieving data through a signal')
            ->setSuggestLink($this->link('signalSuggest!'))
            ->useAsConstantSuggester()
            ->addJsOptions('componentName', $this->getName()); //important when using signals



        $form->addSubmit('sub', 'Submit');

        return $form;
    }

    public function actionSuggestAhoj($typedText = '')
    {
        $this->matches = $this['ahojSuggester']->getSuggestions($typedText);
    }

    public function renderSuggestAhoj()
    {
        $this->sendResponse(new JsonResponse($this->matches));
    }

    public function actionSuggestConstant($typedText = '')
    {
        $this->matches = $this['constantSuggester']->getSuggestions(NULL);
    }

    public function renderSuggestConstant()
    {
        $this->sendResponse(new JsonResponse($this->matches));
    }

    public function actionSuggestDb($typedText = '')
    {
        $this->matches = $this['dbSuggester']->getSuggestions($typedText);
    }

    public function renderSuggestDb()
    {
        $this->sendResponse(new JsonResponse($this->matches));
    }

    public function handleSignalSuggest($typedText = '')
    {
        $matches = $this['constantSuggester']->getSuggestions(NULL);
        $this->sendResponse(new JsonResponse($matches));
    }

    protected function createComponentAhojSuggester()
    {
        $suggester = new Nette\Addons\SuggestInput\ArraySuggester();

        $data = array(
            'ahoj', 'ahojk', 'ahojky', 'bah', 'bahn', 'bahno', 'cíl', 'cíle', 'cílevě', 'cílevě', 'cílevěd', 'cílevědo', 'cílevědomý', 'cílevědomý',
            'ahoj', 'ahojk', 'ahojky', 'bah', 'bahn', 'bahno', 'cíl', 'cíle', 'cílevě', 'cílevě', 'cílevěd', 'cílevědo', 'cílevědomý', 'cílevědomý',
            'ahoj 1', 'ahojk', 'ahojky', 'bah', 'bahn', 'bahno', 'cíl', 'cíle', 'cílevě', 'cílevě', 'cílevěd', 'cílevědo', 'cílevědomý', 'cílevědomý',
            'ahoj 2', 'ahojk', 'ahojky', 'bah', 'bahn', 'bahno', 'cíl', 'cíle', 'cílevě', 'cílevě', 'cílevěd', 'cílevědo', 'cílevědomý', 'cílevědomý',
            'ahoj 3', 'ahojk', 'ahojky', 'bah', 'bahn', 'bahno', 'cíl', 'cíle', 'cílevě', 'cílevě', 'cílevěd', 'cílevědo', 'cílevědomý', 'cílevědomý',
            'žščřcjďťŇ', 'ŽŠČŘĎŤň', 'ahoj ahoj', 'hola hou'
        );
        $suggester
            ->setItems($data)
            //setting this will match only items beginning with query string
            //->matchFromBeginning(TRUE)
            ;

        return $suggester;
    }

    protected function createComponentConstantSuggester()
    {
        $suggester = new Nette\Addons\SuggestInput\ConstantSuggester();
        $data = array('A great tooltip', 'Is on more lines!', 'Type "Expedice Mars 2009" in the last input!');
        return $suggester->setItems($data);
    }

    protected function createComponentDbSuggester()
    {
        $suggester = new Nette\Addons\SuggestInput\DbSuggester($this->getService('database'));
        return $suggester
            ->setTable('organizers')
            ->setColumn('name')
            ->setWhere('`name` LIKE ?');
    }
\--

Víc dokumentace je v kódu a v balíku.

Tak si ho užijte!

{{tags: form, input, text, textinput}}


{{author: peci1|2051}}
