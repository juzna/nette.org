Window Manager
******************

Snadné používání jQuery UI Dialogů .[perex]

|Verze | 2.0
|Download | [http://www.cherryboss.cz/CherryWM2.0.rar]
|Download demo | [http://www.cherryboss.cz/CherryWM2.0Demo.rar]
|Demo | [http://www.cherryboss.php5.cz/]
|Forum thread | [http://forum.nette.org/cs/8969-window-manager-pro-nette-2-0]
|Autor | Michal "CherryBoss" Vyšinský
|Licence | LGPL
| Nette | 2.0 PHP 5.3 a vyšší

Co to umí
=========

- Snadná práce s [jQuery UI Dialogy | http://jqueryui.com/demos/dialog/]

Instalace
=========

Stáhnout a přilinkovat knihovnu [jQuery UI | http://jqueryui.com/download]

Stáhnout tuto knihovnu a rozbalit do složky libs.
Do config.neon přidejte službu windowmanager:
/--
windowmanager:
	class: ChWindowManager
	arguments: [@container, [[
		templatespath: /windows/templates/
		basetemplatename: BaseWindow.latte
	]]]
	run: true
\--
Argumenty:
- templatespath – cesta k adresáři s šablonami oken (relativně k appDIR) - pozor! uvést lomítko na konci cesty
- basetemplatename - název šablony pro základní okno

Vytvoření okna:
===============
Vytvoříme si třídu okna, která dědí od ChBaseWindow
/--php
class DemoWindow extends ChBaseWindow {
	public function __construct(Nette\ComponentModel\IContainer $parent = NULL, $name = NULL) {
		parent::__construct($parent, $name);
		$this->position = "center"; //dialog bude na střed
		//$this->position = array(30, 50); //dialog bude na této pozici (x,y)
		//$this->position = array("center", "bottom"); //dialog bude dole uprostřed
		//$this->position = array("right", 50); //dialog bude vpravo 50px od vrchu
		$this->dimension = array(400, 500); //dialog bude mít tyto rozměry (w, h)
		$this->usebasetemplate = true;
		$this->templatefile = "DemoWindow.latte";
}
}
\--
Další možnosti:
- $this->usebasetemplate - určí, zda se použije základní šablona okna (definována v config.neon)
- $this->templatefile - vloží do základní šablony ještě tuto šablonu (když neuvedeme, bude použita pouze základní šablona)

Do presenteru přidáme továrničku na komponentu:
/--php
public function createComponentDemoWindow($name) {
	$window = new DemoWindow($this, $name);
	$window->addButton('Disable me', 'function() {$(this).dialog("disable")}');
	$window->addButton('Enable me', 'function() {$(this).dialog("enable")}');
	$window->setEvent('dragStart', 'function(event, ui) {$(this).dialog("disable");}');
	$window->setEvent('dragStop', 'function(event, ui) {$(this).dialog("enable");}');
	$window->setOption("autoOpen", "false");
	$window->setOption("title", "This is normal window with buttons");
}
\--

Metody:
- addButton(text, action) - přidá do dialogu tlačítko
- setOption(option, value) - nastaví option pro dialog
- setEvent(event, action) - nastaví event pro dialog

Všechny options a events a jejich možnosti naleznete na [http://jqueryui.com/demos/dialog/]

V templatu pak stačí umístit libovolně:
/--html
{control nazev}
\--

Tvorba vlastního dialogu bez použití base templatu
==================================================
Když nějaký dialog nepoužije výchozí template (nastavený v config.neon). Měla by šablona okna vypadat následovně:
/--html
{!$jscode}
<div id="{$id}">
    Some content
</div>
\--

V $jscode je vygenerovaný js kód na aktivaci a nastavení dialogu (nesmí se escapovat! vždy dejte před znak "$" znak "!"

Hodnoty předávané šabloně jsou tyto:
- $jscode - vygenerovaný js kód
- $id - identifikátor okna - přes něj lze stylovat atd.
- $includeTemplate - soubor s vnořenou šablonou při použití base templatu

Když nastavíme option dialogu "autoOpen" na "false" (boolean hodnoty prosím zadávat v uvozovkách) pomocí metody setOption("autoOpen", "false"), můžeme pak dialog otevřít třeba následujícím odkazem:
/--html
<a href="#" onClick="$('#demoWindow').dialog('open');">Open window</a>
\--

To Do
=====
- Možnost ukládání stavu dialogů jako v předešlé verzi
- Jestli máte nějaké nápady - sem s nimy :)

{{tags: window manager, manažer oken, cherryboss}}


{{author: CherryBoss|4022}}
