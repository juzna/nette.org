####### File Downloader #######

.[perex]
Je třída na **jednodušší stahování souborů**. Podporuje **navazování přerušeného stahování**, **segmentové stahování**, automatické zjištění mimetypu souboru, češtinu a mezery v názvech souborů a obsahuje **omezovač rychlosti** stahování.

|Verze    | 1.0.0
|Download | Viz níže
|Autor    | Jan Kuchař
|Licence  | New BSD License
|Homepage | http://filedownloader.projekty.mujserver.net

###### Základní použití ######

Chceme stáhnout soubor.

/---code php
$filedownload = new FileDownload;
$filedownload->sourceFile = "source.txt";
$filedownload->download();
\---

##### Fluent interface #####

Zde je to samé, za použití fluent interface

/---code php
FileDownload::getInstance()->setSourceFile("source.txt")->download();
\---

###### Pokročilé použití ######

##### Omezovač rychlosti #####

/---code php
$filedownload = new FileDownload;
$filedownload->sourceFile = "source.txt";
$filedownload->speedLimit = 5*FDTools::BYTE; // Nastavíme rychlost odesílání v bytech
$filedownload->download();
\---

#### Fluent interface ####

/---code php
FileDownload::getInstance()
->setSourceFile("source.txt")
->setSpeedLimit(5*FDTools::BYTE)  // Nastavíme rychlost odesílání v bytech
->download();
\---

##### Název odesílnaného souboru #####

V tomoto příkladu se soubor odešle jako test.txt
/---code php
$filedownload = new FileDownload;
$filedownload->sourceFile = "source.txt";
$filedownload->transferFileName = "test.txt";
$filedownload->download();
\---

#### Fluent interface ####

/---code php
FileDownload::getInstance()
->setSourceFile("source.txt")
->setTransferFileName("test.txt")
->download();
\---

##### Ruční určení mime-typu #####

Soubor se odešle s mime typem pdf souboru

/---code php
$filedownload = new FileDownload;
$filedownload->sourceFile = "source.txt";
$filedownload->mimeType = "application/pdf";
$filedownload->download();
\---

#### Fluent interface ####

/---code php
FileDownload::getInstance()
->setSourceFile("source.txt")
->setMimeType("application/pdf")
->download();
\---

##### Zobrazení souboru přímo v prohlížeči #####

*Přidáno ve verzi 1.0.0*

/---code php
$filedownload = new FileDownload;
$filedownload->sourceFile = "source.txt";
$filedownload->contentDisposition = FileDownload::CONTENT_DISPOSITION_INLINE;
$filedownload->download();
\---

#### Fluent interface ####

/---code php
FileDownload::getInstance()
->setSourceFile("source.txt")
->setContentDisposition(FileDownload::CONTENT_DISPOSITION_INLINE)
->download();
\---

##### Callbacky - když ... #####

FileDownloader podporuje callbacky. Tzn. například: když chci něco provést když se přeruší spojení, tak použiji callback abort. Registrace proběhne buť:
/---code php
$filedownload = new FileDownload;
$filedownload->sourceFile = "source.txt";
$filedownload->onAbort[] = "onAbort"; // Registrace callbacku
$filedownload->download();
\---
nebo
/---code php
FileDownload::getInstance()
->setSourceFile("source.txt")
->addAbortCallback("onAbort") // Registrace callbacku
->download();
\---

Tzn. callbacky registrujeme buť `onCallback[] = callback;` nebo `addCallbackCallback(callback);` v fluent interface.

#### Přehled callbacků ####

|----------------------------
| Název callbacku    | Popis callbacku
|----------------------------
|BeforeDownloaderStarts| Než se spustí downloader
|BeforeOutputStarts| Tesně před začátkem uploadu souboru (poslední možnost odeslat hlavičky)
|StatusChange|Když se změní stav souboru - když se odešle blok souboru nebo každou sekundu když je stahování souboru bez omezení rychlosti
|Complete|Když je stahování souboru úspěšně dokončeno
|Abort|Když je stahování souboru přerušeno (typicky: uživatel klikne na storno)
|ConnectionLost|Když se přeruší spojení (z jakéhokoli důvodu)
|TransferContinue|Když se naváže přerušené stahování (začne se stahovat část souboru)
|NewTransferStart|Když začne nové stahování od začátku souboru

Parametry callbacku jsou následovné:
/---code php
function onAbort(FileDownload $download,IDownloader $downloader){
	/* ... */
}
\---

.[note]
Kdy je který callback volán hezky ukazuje příklad `form` z repozitáře. (obsahuje přehled volaných callbacků)

###### Krátká video ukázka ######

<OBJECT id='mediaPlayer' width="724" height="517"
classid='CLSID:22d6f312-b0f6-11d0-94ab-0080c74c7e95'
codebase='http://activex.microsoft.com/activex/controls/mplayer/en/nsmp2inf.cab#Version=5,1,52,701'
standby='Loading Microsoft Windows Media Player components...' type='application/x-oleobject'>
<param name='fileName' value="http://filedownloader.projekty.mujserver.net/filedownloader.avi">
<param name='animationatStart' value='true'>
<param name='transparentatStart' value='true'>
<param name='autoStart' value="false">
<param name='showControls' value="true">
<param name='loop' value="false">
<EMBED type='application/x-mplayer2'
  pluginspage='http://microsoft.com/windows/mediaplayer/en/download/'
  id='mediaPlayer' name='mediaPlayer' displaysize='4' autosize='-1'
  bgcolor='darkblue' showcontrols="true" showtracker='-1'
  showdisplay='0' showstatusbar='-1' videoborder3d='-1' width="724" height="517"
  src="http://filedownloader.projekty.mujserver.net/filedownloader.avi" autostart="false" designtimesp='5311' loop="false">
</EMBED>
</OBJECT>

[Stáhnout video | http://filedownloader.projekty.mujserver.net/filedownloader.avi]


###### Živé demo ######
http://filedownloader.projekty.mujserver.net/demo/
<iframe width="100%" height="600" frameborder="3" src="http://filedownloader.projekty.mujserver.net/demo/"></iframe>


###### Získat File Downloader ######

[https://guest:@svn.mujserver.net:8443/svn/Nette_FileDownloader/trunk | https://guest:@svn.mujserver.net:8443/svn/Nette_FileDownloader/trunk]

{{author: Honza Kuchař|1018}}
