File Downloader
###############

Je třída na jednoduší a korektní stahování souborů. Podporuje navázání přerušeného stahování (partial-content), segmentové stahování (pouze jeden segment na jedno spojení), automatické zjištění mimetypu souboru (možnost konfigurace v ini souboru), češtinu a mezery v názvech souborů a obsahuje omezovač rychlosti stahování souborů.

1. Příklad
**********

Mám na serveru složku s daty, ze které chci odeslat jeden soubor, ale při stahování souboru chci otestovat, zda má uživatel oprávnění ke stažení souboru. Použiji File downloader:
/---code php
if($acl->isAllowed("download"))
  FileDownloader::download("test.zip");
\---
A to je celé. File downloader se už sám postará o hlavičky, o bug v IE nebo o přerušené stahování.

2. Příklad
**********

Mám server se soubory. Uživatelé si k němu platí přístup podle rychlosti přístupu k serveru. (například: 32kb/s;64kb/s;512kb/s;1024kb/s;neomezené) Za použité file downloaderu:
a) Nastavím rychlost v bootstrap.php:
/---code php
  FileDownloader::$maxDownloadSpeed = 64; // in kb/s
\---
a potom už volám klasicky:
/---code php
  FileDownloader::download("test.zip");
\---

b)
/---code php
  // Nebo zavolám přímo funkci download s parametrem:
  FileDownloader::download("test.zip", null, null, 64);
\---

Přehled funkcí
**************

/---code php
  /**
   * Show "download dialog" in browser for required file
   *  + Supports partial downloads
   *  + Supports speed limits
   *  + Supports auto mimetype detection (from config ini or from fileinfo php extension)
   *  + Lower server stress (upload func. is faster than readfile)
   *  + Auto switch:
   *    + readfile() (compatibility mode)
   *    + internal readfile function - supports
   *      partial downloads and is faster than readFile()
   *
   * @param string $location      Location of source file
   * @param string $filename      File name with witch will be file sent to browser. for example: "test.jpg". UTF-8 encoded!
   * @param string $mimeType      Mimetype of the file.
   * @param int    $speedLimiter  Limits file download speed
   * @param string $terminate     Terminate script after download completes
   */
  FileDownloader::download($location);
\---
----------------------------------
/---code php
  /**
   * Returns mimetype of the file
   *
   * @param string $location  Everithing what accepts pathinfo()
   * @return string           Mime type
   */
  FileDownloader::getMimeType($location)
\---
----------------------------------
/---code php
  /**
   * Send file to browser. (enhanced readfile())
   * This function do not send any headers!
   *
   * It is strongly recomended to set_time_limit(0). If
   * time limit gone before file download ends file may
   * be corrupted!
   *
   * @param string $location      File location
   * @param int $start            Start byte
   * @param int $end              End byte
   * @param bool $speedLimit      Use buffer value as bytes per second?
   * @param int $buffer           Buffer size
   */
    FileDownloader::readFile($location)
\---

Vývojová verze ze SVN
*********************
[https://svn.mujserver.net:8443/svn/Nette_FileDownloader/trunk | https://svn.mujserver.net:8443/svn/Nette_FileDownloader/trunk]

Pro přihlášení použijte uživatele "guest" a heslo nechte prázdné.

Stabilní verze ze SVN
*********************

[https://svn.mujserver.net:8443/svn/Nette_FileDownloader/tags | https://svn.mujserver.net:8443/svn/Nette_FileDownloader/tags]

Pro přihlášení použijte uživatele "guest" a heslo nechte prázdné.

Stabilní verze z www stránek projektu
*************************************
[http://filedownloader.projekty.mujserver.net | http://filedownloader.projekty.mujserver.net]

{{author: Honza Kuchař|1018}}
