{{extras}}

TagInput
********

Rozšíření formulářů pro rychlé a intuitivní zadávání tagů s našeptáváním a jednoduchou validací. .[perex]

|* Verze     | 1.2
|* Repozitář | [https://github.com/Mikulas/TagInput]
|* Download  | "TagInput_1.2@github.com":https://github.com/Mikulas/TagInput/zipball/1.2
|* Autor     | Mikuláš Dítě
|* Licence   | "Original BSD":https://github.com/Mikulas/TagInput/blob/master/README.textile#footer
|* Požadavky | PHP 5.3+, Nette 2.0 alpha (nové namespace), jQuery 1.4+

Ukázka
---------------

Online demo: http://taginput.injectionsoft.com/

[* http://files.droplr.com/files/71192952/qVGi.Screen%20shot%202010-12-11%20at%2012%3A06%3A19.png*]

[* http://files.droplr.com/files/71192952/DbQR.Screen%20shot%202010-12-11%20at%2012%3A05%3A25.png*]

Použití
---------------

Vložte `tagInput.css` a `tagInput.js` do veřejně přístupné složky (tzn. do složeky pod `www`). Například můžete použít:
/---html
<link rel="stylesheet" media="screen,projection,tv" href="{$basePath}/css/tagInput.css" type="text/css">
<script type="text/javascript" src="{$basePath}/js/tagInput.js"></script>
\---
Důležité je načítat `tagInput.js` až po `netteForms.js`.

Poté vložte `TagInput.php` kamkoli se pro třídy dívá váš `RobotLoader`. V `BasePresenter.php::startup()` zaregistrujte rozšíření pomocí:

/---php
\Nette\Forms\Controls\TagInput::register();
\---

Nyní můžete snadno používat TagInput ve formulářích pomocí

/---php
$form->addTag('tags');
\---


Autocomplete - našeptávání
--------------------------
Pole s našeptávanými tagy předejte jako parametr setteru při vytváření formuláře.

/---php
	$form->addTag('tags')->setSuggestCallback(function($filter, $count) { ... }); // nebo callback
\---

Lze nastavit délku vraceného pole (mimo jiné se předává callbacku jako druhý argument):
/---php
	$form->addTag('tags')->setPayloadLimit(5);
\---

Důležitá část je přidání speciální akce do prezenteru (nebo společného předka prezenterů), ve kterém se bude tato komponenta využívat.
/---php
public function actionTagInputSuggestControlname($word_filter)
{
	$form = $this->getComponent('componentname');
	$form['controlname']->renderResponse($this, $word_filter);
}
\---
Všimněte si, že `controlname` figuruje jak v názvu akce, tak jako klíč ve form. Místo něj napište název tag controlu (např. ukázeky na této stránce by měli `tags`). Hodnota `componentname`, tedy název vaší komponenty, stačí přepsat jenom na jednom místě.


Validace
--------
TagInput validuje jednak klasická pravidla z TextBase (tedy hlavně TextInput), ale i vlastní.
* `Form::EQUAL` - jako parametr bere pole, které musí být stejné jako hodnota
* `Form::FILLED`
* `Form::MIN_LENGTH` - místo počtu znaků sleduje počet tagů
* `Form::INTEGER` - každý tag musí být integer
* `Form::FLOAT` - každý tag musí být float
a vlastní
* `TagInput::UNIQUE` - kontroluje, jestli je každý tag unikátní

nepodporovaná pravidla jsou
* Form::EMAIL
* Form::URL
* Form::REGEXP
* Form::PATTERN
* Form::RANGE

{{author: Mikulas Dite|2514}}
