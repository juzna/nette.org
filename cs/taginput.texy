{{extras}}

TagInput
********

Rozšíření formulářů pro rychlé a intuitivní zadávání tagů s našeptáváním a jednoduchou validací. .[perex]

| Verze     | 1.0
| Repozitář | [https://github.com/MikulasDite/TagInput]
| Download  | stable zatím nevydán
| Autor     | Mikuláš Dítě
| Licence   | MIT
| Požadavky | PHP 5.3+, Nette 2.0 alpha, jQuery 1.4+

Tento addon zatím není označen jako `stable` a může způsobovat neočekávané chování vaší aplikace. .[caution]

Ukázka
---------------

Online demo: http://taginput.injectionsoft.com/

[* http://files.droplr.com/files/71192952/qVGi.Screen%20shot%202010-12-11%20at%2012%3A06%3A19.png*]

[* http://files.droplr.com/files/71192952/DbQR.Screen%20shot%202010-12-11%20at%2012%3A05%3A25.png*]

Použití
---------------

Vložte `tagInput.css` a `tagInput.js` do veřejně přístupné složky (tzn. do složek pod `www`). Například můžete použít:
/---html
<link rel="stylesheet" media="screen,projection,tv" href="{$basePath}/css/tagInput.css" type="text/css">
<script type="text/javascript" src="{$basePath}/js/tagInput.js"></script>
\---
Důležité je načítat `tagInput.js` až po `netteForms.js`.

Poté vložte `TagInput.php` kamkoli se pro třídy dívá váš `RobotLoader`. V `BasePresenter.php::startup()` zaregistrujte rozšíření pomocí:

/---php
\Nette\Forms\TagInput::register();
\---

Nyní můžete snadno používat TagInput ve formulářích pomocí

/---php
$form->addTag('tags');
\---


Autocomplete - našeptávání
--------------------------
Pole s našeptávanými tagy předejte jako třetí parametr při vytváření formuláře.

/---php
	$form->addTag('tags', NULL, array('tags', 'to', 'suggest'));
\---

Důležitá část je přidání speciální akce do prezenteru (nebo společného předka prezenterů), ve kterém se bude tahle komponenta využívat.
/---php
public function actionTagInputSuggestControlname($filter)
{
	$form = $this->getComponent('componentname');
	$form['controlname']->renderResponse($this, $filter);
}
\---
Všimněte si, že `controlname` figuruje jak v názvu akce, tak jako klíč ve form. Místo něj napište název tag controlu (podle ukázek na této stránce `tags`). `componentname`, tedy název vaší komponenty, stačí přepsat jenom na jednom místě.


Validace
--------
TagInput validuje jednak klasická pravidla z TextBase (tedy hlavně TextInput), ale i vlastní.
* `Form::EQUAL` - jako parametr bere pole, které musí být stejné jako hodnota
* `Form::FILLED`
* `Form::MIN_LENGTH` - místo počtu znaků sleduje počet tagů
* `Form::INTEGER` - každý tag musí být integer
* `Form::FLOAT` - každý tag musí být float
a vlastní
* `TagInput::UNIQUE` - kontroluje, jestli je každý tag unikátní

nepodporovaná pravidla jsou
* Form::EMAIL
* Form::URL
* Form::REGEXP
* Form::PATTERN
* Form::RANGE

{{author: Mikulas Dite|2514}}
