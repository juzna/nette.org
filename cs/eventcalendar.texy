EventCalendar
*************

Pokud potřebujete mít na webu jednoduchý kalendář s přehledem událostí (koncerty, happeningy, zápasy apod.), tato komponenta by vám měla pomoci. Umožňuje posouvání mezi měsíci, nastavení jazyka i vlastních popisků. .[perex]

| Zdrojové soubory | [https://github.com/jaroslav-kubicek/EventCalendar]
| PHP | 5.3+
| Fórum | "EventCalendar – kalendář s přehledem akcí":http://forum.nette.org/cs/11843-eventcalendar-kalendar-s-prehledem-akci
| Autor | 2012, Jaroslav Kubíček
| Licence | New BSD License
| Verze | 0.1

Začlenění do projektu
=========

Z "githubu":https://github.com/jaroslav-kubicek/EventCalendar si stáhnete potřebné soubory EventCalendar.php a EventCalendar.latte, které uložíte mezi své ostatní komponenty (typicky složka app/components).
Doplněk není tak nic jiného než obyčejná komponenta a podle toho se k němu i chováte.

Kalendářová komponenta také vyžaduje předání modelu událostí - třídy, která implementuje rozhraní IEventModel, viz "Model událostí", jehož podobu naleznete v souboru IEventModel.php. Ten zkopírujete mezi své modely, kde bude i vaše třída toto rozhraní implementující. Soubor eventCalendar.css obsahuje styly pro kalendář, ze kterých můžete vycházet.

Základní použití
=========
Pro základní použití stačí např. napsat továrničku na komponentu v této podobě:

/--php
public function createComponentCalendar() {
	$cal = new EventCalendar();
	$cal->setEvents(new EventModel());
	return $cal;
}
\--

Tento kód vytvoří **kalendář s anglickými názvy** dnů a měsíců a týden bude začínat nedělí, navigační tlačítka posouvající měsíci budou zobrazena nahoře i dole.

Český kalendář
=========

Pokud chcete vykreslit český formát kalendáře, musíte jako první den v týdnu stanovit pondělí a jazyk nastavit na češtinu takto:

/--php
        $cal->setLanguage(EventCalendar::CZECH); // české názvy měsíců a dnů
        $cal->setMode(EventCalendar::FIRST_MONDAY); // týden začne pondělkem
\--

Vlastní názvy dnů a měsíců
=========

Komponenta EventCalendar vám umožňuje zvolit anglický nebo český jazyk pro měsíce a dny. Pokud byste však chtěli kalendář v jiném jazyce či nekrácené názvy dnů, můžete si nastavit svoje vlastní názvy takto:

/--php
        $cal->setLocalNames(array(
            "monthNames" => array(1 => "Enero", "Febrero", "Marzo", "Abril", "Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"),
            "wdays" => array("Lu","Ma","Mi","Ju","Vi","Sá","Do")
        ));
\--

Tímto příkladem bychom dostali do kalendáře španělštinu.

Metoda setLocalNames očekává asociativní pole, ve kterém je pod indexem "monthNames" pole s názvy měsíců číslované od 1 a pod indexem "wdays" názvy dnů. Pokud takové pole nepředáte, bude vyhozena výjimka InvalidArgumentException.

Pokud takto měníte jazyk kalendáře na nějaký vlastní, doporučuji změnit i text ovládacích tlačítek - viz následující část.

Další nastavení kalendáře
=========

Přizpůsobit si můžete i ovládací tlačítka. Implicitně se v horní části kalendáře vypíše << pro posun o měsíc zpět a >> pro posun o měsíc dopředu. Pod kalendářem jsou pro stejný účel tlačítka "Předchozí měsíc"/"Previous month" a "Následující měsíc"/"Next month". Pokud například nechcete zobrazovat dolní tlačítka a stačí vám jen ta horní, docílíte toho takto:

/--php
        $cal->setOptions(array("showBottomNav"=>FALSE));
\--

Jako parametr předáváte asociativní pole option => value, dostupné jsou tyto volby:

- *'showTopNav'* - TRUE/FALSE pro zobrazení horních navigačních tlačítek,

- *'showBottomNav'* - TRUE/FALSE pro zobrazení dolních navigačních tlačítek,

- *'topNavPrev'* - text horního tlačítka pro posun o měsíc zpět,

- *'topNavNext'* - text horního tlačítka pro posun o měsíc dopředu,

- *'bottomNavPrev'* - text dolního tlačítka pro posun o měsíc zpět,

- *'bottomNavNext'* - text dolního tlačítka pro posun o měsíc dopředu

Nelíbí-li se vám tedy textové << a >>, můžete zadat:

/--php
        $cal->setOptions(array("topNavPrev"=>"","topNavNext"=>""));
\--

a pomocí css stylů si místo toho nastavit třeba obrázek.

Model událostí
=========

Kalendáři musíte předat model událostí, který implementuje rozhraní IEventModel, které má tyto dvě metody:

/--php
interface IEventModel {

    /**
     * zjistí, zda pro daný den existuje událost
     * @return boolean
     */
    public function isForDate($year,$month,$day);

    /**
     * vrátí pole událostí pro daný den
     * @return array
     */
    public function getForDate($year,$month,$day);
}
\--

V praxi budete mít informace o událostech uloženy nejspíše v databázi a je už na vás, jakým způsobem bude váš model pokládat dotazy na databázi a pracovat s daty. Důležité je, aby metoda isForDate vrátila TRUE/FALSE v závislosti na tom, zda pro daný den existuje alespoň jedna událost a metoda getForDate pak vrátí pole těchto události pro daný den. Pokud možno, vyvaroval bych se zejména takové implementace, kdy v metodách isForDate a getForDate pokládáte dotazy na databázi pro každý den zvlášť, což by znamenalo až 2x31 dotazů jen kvůli této komponentě!

Metoda vyhodí výjimku InvalidArgumentException, pokud model toto rozhraní neimplementuje.

**Poznámka:** obou metodám v tuto chvíli předává komponenta měsíce a dny bez nul - např. pro leden 1 nikoli 01, pokud vám to nevyhovuje, nuly si můžete snadno doplnit např. pomocí "Strings::padLeft":http://doc.nette.org/cs/strings

Výpis událostí se neescapuje a ve skutečnosti se vypíšou dovnitř buňky s daným dnem a pomocí css je pak pozicujeme. Vycházet můžete i z ukázkových stylů.

Vzhled
=========

Komponentu EventCalendar můžete stylovat pomocí těchto tříd:

CSS třídy ke stylování:

- *eventCalendar* - div obalující celý kalendář

- *ec-monthTable*- tabulka kalendáře

- *ec-validDay* - den v měsíci

- *ec-eventDay* - den, pro který existuje nějaká událost (zároveň obaluje události daného dne)

- *ec-empty* - buňka tabulky, která neobsahuje žádný den (=jiný měsíc)

- *ec-dayOfEvents* - třída pro samotný den (není rodičem pro div, který obaluje události dne, ale sourozencem)

- *ec-eventBox* - div obal pro události dne

- *ec-event* - obsahuje jednotlivou událost

- *ec-bottomNavigation* - obal pro dolní ovládací tlačítka

AJAX
=========

Překreslovat celou stránku kvůli změně zobrazeného měsíce není zrovna ideální. Ovládací tlačítka kalendáře proto mají nastavenou třídu ajax. Stačí vám pak využít "doplňku":http://addons.nette.org/cs/jquery-ajax, který vytvořil Jan Marek a váš kalendář zajaxovatí.

Další vývoj & otázky
=========

Vaše otázky, tipy a nápady na novou funkcionalitu do budoucna můžete směrovat do "fóra":http://forum.nette.org/cs/11843-eventcalendar-kalendar-s-prehledem-akci, chyby a pozměňovací návrhy můžete posílat i na "github":https://github.com/jaroslav-kubicek/EventCalendar.

{{author: kubajz|5414}}
